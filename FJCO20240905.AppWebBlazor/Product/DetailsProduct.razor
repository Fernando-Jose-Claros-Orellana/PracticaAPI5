@page "/product-details/{Id:int}"

@using FJCO20240905.DTOs.ProductFJCO_DTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using FJCO20240905.AppWebBlazor.Data;

<h3>Ver Producto</h3>
<div class="row">
    <div class="col-4">
        <div class="form-group">
            <label for="Nombre">Nombre:</label>
            <input type="text" class="form-control" disabled @bind="product.Nombre" />
        </div>
    </div>
    <div class="col-4">
        <div class="form-group">
            <label for="LastName">Apellido:</label>
            <input type="text" class="form-control" disabled @bind="product.Descripcion" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="form-group">
            <label for="Address">Precio:</label>
            <input disabled class="form-control" @bind="product.Precio"></input>
        </div>
    </div>
</div>
<br>
<div class="row">
    <div class="col-12">
        <NavLink href="/product-list" class="btn btn-primary">Ir a buscar productos</NavLink>
    </div>
</div>

@code {
    // Parámetro para recibir el ID del cliente desde la llamada al componente
    [Parameter]
    public int Id { get; set; }

    // Inyección de dependencia de CustomerService para acceder a sus métodos
    [Inject]
    ProductService productService { get; set; }

    // Creación de una instancia de GetIdResultCustomerDTO para almacenar los datos del cliente
    GetIdResultProductDTO product = new GetIdResultProductDTO();

    /*
         *  se utiliza para realizar inicializaciones o tareas
         *  cuando se carga una página o componente de Blazor.
         * Este método se llama automáticamente cuando el componente se está inicializando
         *  antes de que se muestre en la interfaz de usuario.
         */
    protected override async Task OnInitializedAsync()
    {
        // En el momento de inicialización del componente, llama al método GetById de
        //  CustomerService para obtener los datos del cliente con el ID proporcionado
        product = await productService.GetProductById(Id);
    }

}